{
  "hash": "9f207af26528a9b9c6c14002064752c5",
  "result": {
    "markdown": "---\ntitle: \"Panic!<br>In The Toolshed\"\nsubtitle: \"[matt-dray.github.io/government-toolshed](https://matt-dray.github.io/government-toolshed)\"\nauthor: \"[Matt Dray](https://www.matt-dray.com), June 2023\"\nformat:\n  revealjs: \n    theme: [default, assets/styles/toolshed-style.scss]\n    menu: true\n    code-line-numbers: true\ntitle-slide-attributes:\n  data-background-image: assets/images/pegboard-invert.png\n  data-background-opacity: \"0.1\"\n  data-notes: |\n    * I'm here to talk about making and sharing tools, mostly software, in government.\n    * I work at UKHSA, but this is a personal perspective.\n    * In these 15 mins or so I'll reflect on a success that has also resulted in some mild panic, and I'll tell you what I learnt.\n    * Thank you for coming to my therapy session.\n---\n\n\n## tl;dr {.center data-background-image=\"assets/images/pegboard.png\" data-background-opacity=0.1}\n\n1. Sustainabilise\n1. Centralise\n1. Advertise\n\n::: notes\n* 'tl;dr' is 'too long didn't read'. These are the three things that you should consider when building tools. I don't think they're that surprising (even if one of them is not a real word).\n* Think sustainably: design your tools so that it's not a problem if you disappear.\n* Centralise: store all aspects of the project (code, documentation) in an obvious, open place that others can contribute to.\n* Advertise: tell people about the project to help uncover duplication and get them involved.\n:::\n\n# An experience {.center data-background-image=\"assets/images/pegboard-invert.png\" data-background-opacity=0.1}\n\n::: notes\n* It's easy to hand out platitudes and tell you what to do. Especially because you probably know you should do these things anyway.\n* So for credibility I'll give you an example of a tool I created.\n* But nothing is ever easy, so I'll tell you about its complications too.\n:::\n\n## Thought process (2021) {.center data-background-image=\"assets/images/pegboard.png\" data-background-opacity=0.1}\n\n1. There's new [spreadsheet guidance](https://analysisfunction.civilservice.gov.uk/policy-store/releasing-statistics-in-spreadsheets/)\n1. Might as well write some functions\n1. Other people are probably doing this\n\n::: notes\n* Remember 2021? Me neither.\n* The [Government Analysis Function](https://analysisfunction.civilservice.gov.uk/) created [new (and very good) guidance](https://analysisfunction.civilservice.gov.uk/policy-store/releasing-statistics-in-spreadsheets/) for releasing statistics in spreadsheets.\n* None of the spreadsheets in my team were compliant. Colours, blank columns, multiple headers, footnotes hidden under tables. Classic non-accessible stuff. \n* Also the production process was point-and-click before I joined.\n* Given multiple files staggered across releases, it made sense to start with some reusable R functions to apply the new guidance consistently, which later meant it was worthwhile to create a package.\n* At the time, there was [the Python package 'gptables'](https://gptables.readthedocs.io/en/latest/) from members of the Analysis Function, but it hadn't yet been updated for the new guidance (it has been now) and there was no native R solution. R users are special and they deserve the very best.\n:::\n\n## {.center-h data-background-image=\"assets/images/pegboard.png\" data-background-opacity=0.1}\n\n![](assets/images/website-a11ytables.png){alt='A screenshot of the documentation website for the R package called a11ytables. It has several sections of information about the purpose of the package, the license, the authors, and more.'}\n\n[co-analysis.github.io/a11ytables](https://co-analysis.github.io/a11ytables)\n\n::: notes\n* And so the {a11ytables} package was created. Entirely for our own use at first, but I got the feeling it would have other interested parties.\n* What does it do? You give it your tables of data, along with some metadata like worksheet titles, and it automatically creates an xlsx spreadsheet that is (mostly!) compliant with the guidance. It does the hard work for you, basically.\n* This screenshot is the documentation homepage.\n:::\n\n# {.center data-background-image=\"assets/images/pegboard.png\" data-background-opacity=0.1}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nremotes::install_github(\"co-analysis/a11ytables\")\n\na11ytables::create_a11ytable(\n  tab_titles,\n  sheet_types,\n  sheet_titles,\n  blank_cells,\n  sources,\n  tables\n) |>\n  a11ytables::generate_workbook() |>\n  openxlsx::saveWorkbook()\n```\n:::\n\n\n::: notes\n* The code is openly available on GitHub, so people can freely download it, ask questions, or contribute code.\n* Users see only two functions, basically: one to organise the data into a dataframe and a second one to apply the structure and style of a best-practice spreadsheet.\n* \n:::\n\n## Success! {.center data-background-image=\"assets/images/pegboard.png\" data-background-opacity=0.1}\n\n* It did what I wanted it to do\n* I told people about it\n* It's in use across government\n\n::: notes\n* I used it to successfully create the spreadsheets we needed to release. The lowest bar!\n* I spoke to some targeted groups that might find it useful: both internally (i.e. at an NHS-R webinar, at a GSS Champions quarterly meeting, to a Scottish Government R conference) and externally (i.e. a talk at EARL conference 2022, blog posts, social media). It's referenced now from the Analysis Function [spreadsheet guidance](https://analysisfunction.civilservice.gov.uk/policy-store/further-resources-for-releasing-statistics-in-spreadsheets/).\n* It's not perfect, but the package is now in use across a number of organisations (CO, MoJ, ONS, DfT, Scot Gov, etc)\n:::\n\n## Panic! {.center data-background-image=\"assets/images/pegboard.png\" data-background-opacity=0.1}\n\n* The maintainer left the org!\n* Should {a11ytables2} exist?\n* Where should these things live?\n\n::: notes\n* Despite some success, there are some complications.\n* I wrote the package in a department that I've now left. My access to the GitHub repo is diminished. How does this impact things?\n* {a11ytables} is based on the {openxlsx} package. An {openxlsx2} package is maturing and has better support for a number of features, like automatic font colouring, and should make for more readable code on the backend. So should {a11ytables} be updated? Or is this the chance to make an '{a11ytables2}'?\n* This raises a wider question of where this kind of tool should live. It was developed in one particular department on their time, so it 'belongs' to them. But now it's stuck in a liminal space. If it were to move somewhere else, we'd need to think about licensing, broken URLs, burden on new owner, etc.\n:::\n\n# Reflection {.center data-background-image=\"assets/images/pegboard-invert.png\" data-background-opacity=0.1}\n\n::: notes\n* I think the experience boils down to three things: think sustainably, advertise and centralise.\n:::\n\n## 1. Sustainabilise {.center data-background-image=\"assets/images/pegboard.png\" data-background-opacity=0.1}\n\n* Build modular things\n* Write good documentation\n* Plan for your loss\n\n::: {.notes}\n* Start small and simple, then build up. \n* Make it easy for you and others to understand the code.\n* All of this will make it easier for others to maintain and develop the tool if you leave the project.\n:::\n\n## 2. Centralise {.center data-background-image=\"assets/images/pegboard.png\" data-background-opacity=0.1}\n\n* Make it discrete\n* Make it open\n* Pool your tools\n\n::: {.notes}\n* Bring together your code in one place; ideally into a package structure if it makes sense. Make it into a defined 'thing' rather than 'a bunch of stuff in a folder'.\n* Get it off your local drive and made available to your team, to your org, to the government, and beyond.\n* Tools created on government time belong to the taxpayer. Making it open improves transparency, but also makes it much easier for others to collaborate and ask questions. (Yes, I understand that certain things are sensitive and it's not easy to do make them freely available.)\n* Try to surface your organisation's tools in one place. \n:::\n\n## 3. Advertise {.center data-background-image=\"assets/images/pegboard.png\" data-background-opacity=0.1}\n\n* Talk to people\n* Expose duplication early\n* Build a community\n\n::: notes\n* How can anyone find your project? Talk about it in internal networks, at Coffee & Coding, etc. Expand out to external events even if you don't think there are users there; try Slack, or these Data Science meetups, or even external events. You could inspire someone else.\n* The sooner you start talking about it, the sooner you'll find out if it already exists.\n* Encourage questions and collaborators to help improve the thing.\n* This is not about 'marketing', 'clout', or impressing people. It's about making people's lives easier, including yours.\n* The smart ones among you will realise that this is pretty meta: I'm advertising while I tell you to advertise.\n:::\n\n# It's not just me {.center data-background-image=\"assets/images/pegboard-invert.png\" data-background-opacity=0.1}\n\n::: notes\n* Turns out that there are principles that relate to these ideas already; they just aren't spelled out in a way that's aimed directly at creators of analytical tools like we're talking about today.\n:::\n\n## [Gov Design Principles](https://www.gov.uk/guidance/government-design-principles) {.center data-background-image=\"assets/images/pegboard.png\" data-background-opacity=0.1}\n\n* Do less\n* Iterate, then iterate again\n* Make things open, it makes things better\n\n::: notes\n* These three points from [the Government Design Principles](https://www.gov.uk/guidance/government-design-principles) are helpful in the context of writing tools as well.\n* Principle 2: 'If weâ€™ve found a way of doing something that works, we should make it reusable and shareable instead of reinventing the wheel every time.'\n* Principle 5: 'The best way to build good <s>services</s> tools is to start small and iterate wildly.'\n* Principle 10: 'Share code, share designs, share ideas, share intentions, share failures.'\n:::\n\n## [Tech Code of Practice](https://www.gov.uk/guidance/the-technology-code-of-practice) {.center data-background-image=\"assets/images/pegboard.png\" data-background-opacity=0.1}\n\n* Be open and use open source\n* Share, reuse and collaborate\n\n::: notes\n* The [Technology Code of Practice](https://www.gov.uk/guidance/the-technology-code-of-practice) echoes these sentiments.\n* [Criterion 3](https://www.gov.uk/guidance/be-open-and-use-open-source): 'Publish your code and use open source software to improve transparency, flexibility and accountability.'\n* [Criterion 8](https://www.gov.uk/guidance/share-and-reuse-technology): 'Avoid duplicating effort and unnecessary costs by collaborating across government and sharing and reusing technology, data, and services.'\n\n:::\n\n# A metaphor {.center data-background-image=\"assets/images/pegboard-invert.png\" data-background-opacity=0.1}\n\n::: notes\n* You'll have noticed the idea of a 'toolshed' in the theme of this session.\n:::\n\n## {background-image=\"assets/images/ashim-d-silva-Kw_zQBAChws-unsplash.jpg\"}\n\n::: notes\n* Is this the current state of things? \n* We know there are tools in use across government that others might be able to use or contribute to, but they're not organised.\n* Maybe some are multifaceted instruments, like the Swiss Army knife; maybe some are more blunt, like this tomahawk; maybe some are overcomplicated, like this knife that has a picture of a... knife... on it.\n* Is a nail an tool? Maybe it needs a hammer. Where can I find one?\n* You get the idea. It's a metaphor.\n\n:::\n\n## {background-image=\"assets/images/cesar-carlevarino-aragon-NL_DF0Klepc-unsplash.jpg\"}\n\n::: notes\n* Could this be the future state of things?\n* What if we could organise and arrange our tools so everyone can more easily find and use them?\n* Fittingly, this image has some empty spots to be filled and also some tools that fill a spot, but don't quit fit the spot. Room to develop?\n* But maybe we need something more like a Toolstation (not sponsoring this talk) that has a catlogue that you can peruse.\n:::\n\n## tl;dr {.center data-background-image=\"assets/images/pegboard.png\" data-background-opacity=0.1}\n\n1. Sustainabilise\n1. Centralise\n1. Advertise\n\n::: notes\n* Think sustainably: design your tools so that it's not a problem if you disappear.\n* Centralise: store all aspects of the project (code, documentation) in an obvious, open place that others can contribute to.\n* Advertise: tell people about the project to help uncover duplication and get them involved.\n:::\n\n## {.center data-background-image=\"assets/images/pegboard.png\" data-background-opacity=0.1}\n\n::: notes\n:::\n\n## Credits {.center data-background-image=\"assets/images/pegboard.png\" data-background-opacity=0.1}\n\n* <a href=\"https://unsplash.com/es/@randomlies\">Ashim Dâ€™Silva</a> on <a href=\"https://unsplash.com/photos/Kw_zQBAChws\">Unsplash</a>.\n* <a href=\"https://unsplash.com/@carlevarino\">Cesar Carlevarino Aragon</a> on <a href=\"https://unsplash.com/photos/NL_DF0Klepc\">Unsplash</a>.\n* [DM Serif Text](https://fonts.google.com/specimen/DM+Serif+Text/about) by Colophon Foundry.\n* [Spline Sans Mono](https://fonts.google.com/specimen/Spline+Sans+Mono/about) by Eben Sorkin and Mirko VelimiroviÄ‡.\n* [Quarto](https://quarto.org/) by Posit PBC.\n\n::: notes\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}